buildscript {
	repositories {
		jcenter()
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
		maven {
			name = "Forge"
			url = "https://files.minecraftforge.net/maven/"
		}
		maven {
			name = "Jitpack"
			url = "https://jitpack.io/"
		}
	}
	dependencies {
		//SinÂ² Edition Loom
		classpath 'com.github.Earthcomputer:fabric-loom:7b42eb7b'
	}
}

plugins {
	id 'maven-publish'
}
apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.alphaMcp('2.2a.1', loom.mediafire('http://www.mediafire.com/file/vwgj80p8n1plrlq/mcp22a.zip')) { mappings ->
		mappings.method 'net/minecraft/src/World', '(III)Z', 'func_708_k', 'canSeeTheSky'
	}
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	compile 'com.google.code.gson:gson:2.8.6'
	compile 'com.google.guava:guava:28.2-jre'
	compile 'commons-io:commons-io:2.5'
	compile 'org.apache.commons:commons-lang3:3.9'
	compile 'org.apache.logging.log4j:log4j-api:2.13.0'
	compile 'org.apache.logging.log4j:log4j-core:2.13.0'
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

remapJar {
	toMappings = 'official'
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
